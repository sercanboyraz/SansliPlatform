<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:syncfusion="http://schemas.syncfusion.com/wpf">

	<FlowDocumentScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"   x:Key="DockingDocument" >
		<FlowDocument FontFamily="Calibri" FontSize="14.5">
			<Paragraph FontSize="24" FontFamily="Cambria"  FontWeight="Bold">
				WPF DockingManager
			</Paragraph>
			<Paragraph FontSize="15" FontFamily="Calibri">
				This DockingManager application is designed to show off the features of the WPF DockingManager library for Windows Presentation Foundation (WPF). Along with the executable, the full source
                is provided so it should be easy to see how to integrate the library into your own applications. This document contains features and other controls to demonstrate most window and layout
                features. Use the properties window to view the features of DockingManager.
			</Paragraph>
           

            <Paragraph FontSize="15" FontFamily="Calibri">
                The dockingmanager follows an architecture that allows the controls to be docked to any part of the window. It has been broadly designed based on the features present in Visual Studio 2005 docking. The dockingmanager works on top of all the controls placed inside its tree. It takes care of the window layouts for the user automatically and places the controls accordingly. Like the DockPanel, it also uses attached properties to set the controls as docked controls / docked windows. The docked windows can be placed as a group of logically related docked controls.
            </Paragraph>
          
        </FlowDocument>
	</FlowDocumentScrollViewer>
	<!-- Docking manager feature tab -->

	<FlowDocumentScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"  x:Key="DockingManagerFeatures">
		<FlowDocument FontFamily="Calibri" FontSize="14.5" >
            <Paragraph FontSize="24" FontFamily="Cambria"  FontWeight="Bold">
                WPF DockingManager Features
            </Paragraph>
         
            <List MarkerStyle="Square">
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Docked windows are dockable to any part inside the main window.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">User can drag the docked window and create grouped docked windows or arrange in the most logical fashion manner.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Docked windows can be resized using the splitter that appears when the window is docked.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Serialize the state of docked windows in isolated storage / any user defined location.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">There are several default skins available for changing the visual styles of the docked windows.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Docked windows can be float.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Docked windows can be tabbed.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">
                        Set tabalignment to docked windows.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Set closing mode to tabbed docked windows.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">
                        Customize the look and feel of docked windows by overriding the default templates.
                    </Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Control the behavior of docked windows,</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Closing of docked window can be set by using CanClose property.</Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph FontSize="15" FontFamily="Calibri">Dragging of docked window can be set by using CanDrag property.</Paragraph>
                </ListItem>
            </List>
        </FlowDocument>
	</FlowDocumentScrollViewer>
	<!-- Document container feature tab -->

	<FlowDocumentScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"  x:Key="ContainerDocument" >
		<FlowDocument  FontFamily="Calibri" FontSize="14.5" >
            <Paragraph FontSize="24" FontFamily="Cambria"  FontWeight="Bold">
                DockingManager Integrated to MDI/TDI.
            </Paragraph>
            <Paragraph>
				This demonstration sample also exhibits the special features of the syncfusion DockingManager Control which is completely integrated with the MDI/TDI children.
			</Paragraph>
			<Paragraph>
			Under certain circumstances user needs the data to be contained in the most traditional MDI(Multiple Document Interface) and in some situation where constant comparison can be made between the documents, the user needs TDI(Tabbed Document Interface).
			</Paragraph>
			<Paragraph>
				For ease Navigation for the customer, You can switch between the modes MDI and TDI
			</Paragraph>
			
			<Paragraph>
				Using the TabItemContextMenu user can easily create the Horizontal and Vertical Gropping of TabItems which gives a layout similar to the VS2008 IDE experience.
			</Paragraph>
			
		</FlowDocument>
	</FlowDocumentScrollViewer>

</ResourceDictionary>